{"version":3,"sources":["components/Header.jsx","store/reducer.js","store/Store.jsx","store/actions.js","components/TableRow.jsx","containers/Table.jsx","containers/Pagination.jsx","containers/UserInput.jsx","containers/App.jsx","index.jsx"],"names":["Header","state","action","type","beers","payload","search","currentPage","initialState","Store","createContext","fetchData","dispatch","a","page","url","fetch","data","json","dataJSON","TableRow","name","abv","volume","ingredients","Table","useContext","useEffect","tableRows","map","id","ings","Object","keys","group","key","Math","random","filter","el","i","value","Pagination","onClick","prevPage","nextPage","UserInput","useState","input","setInput","htmlFor","onChange","event","target","placeholder","preventDefault","App","ReactDOM","render","children","useReducer","reducer","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.0a2baaa0.chunk.js","sourcesContent":["import React from 'react';\n\n\nconst Header = () => (\n  <h1>PUNK API</h1>\n);\n\nexport default Header;\n","// Reducer function\nexport default (state, action) => {\n  switch (action.type) {\n    case 'FETCH_DATA':\n      return {\n        ...state,\n        beers: action.payload,\n        search: action.search,\n      };\n    case 'NEXT_PAGE':\n      return {\n        ...state,\n        currentPage: state.currentPage + 1,\n      };\n    case 'PREV_PAGE':\n      return {\n        ...state,\n        currentPage: state.currentPage - 1,\n      };\n    default:\n      return state;\n  }\n};\n","import React, { createContext, useReducer } from 'react';\nimport PropTypes from 'prop-types';\n\nimport reducer from './reducer';\n\n\nconst initialState = {\n  beers: [],\n  currentPage: 1,\n  search: '',\n};\n\nexport const Store = createContext(initialState);\n\nexport function StoreProvider({ children }) {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  return <Store.Provider value={{ state, dispatch }}>{ children }</Store.Provider>;\n}\n\nStoreProvider.propTypes = {\n  children: PropTypes.element.isRequired,\n};\n","export const fetchData = async (dispatch, search, page = 1) => {\n  const url = search\n    ? `https://api.punkapi.com/v2/beers?beer_name=${search}&page=${page}&per_page=15`\n    : `https://api.punkapi.com/v2/beers?page=${page}&per_page=15`;\n  const data = await fetch(url);\n  const dataJSON = await data.json();\n  return dispatch({\n    type: 'FETCH_DATA',\n    payload: dataJSON,\n    search,\n  });\n};\n\nexport const nextPage = (dispatch) => dispatch({\n  type: 'NEXT_PAGE',\n});\n\nexport const prevPage = (dispatch) => dispatch({\n  type: 'PREV_PAGE',\n});\n\n// export const searchBeer = async (dispatch, beerName, page = 1) => {\n//   const url = `https://api.punkapi.com/v2/beers?beer_name=${beerName}&page=${page}&per_page=15`;\n//   const data = await fetch(url);\n//   const dataJSON = await data.json();\n//   dispatch({\n//     type: 'SEARCH_BEER',\n//     payload: {\n//       dataJSON,\n//       beerName,\n//     },\n//   });\n// };\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst TableRow = ({\n  name,\n  abv,\n  volume,\n  ingredients,\n}) => (\n  <tr>\n    <td>{name}</td>\n    <td>{abv}</td>\n    <td>{volume}</td>\n    <td>{ingredients}</td>\n  </tr>\n);\n\nTableRow.propTypes = {\n  name: PropTypes.string.isRequired,\n  abv: PropTypes.number.isRequired,\n  volume: PropTypes.number.isRequired,\n  ingredients: PropTypes.element.isRequired,\n};\n\nexport default TableRow;\n","\nimport React, { useContext, useEffect } from 'react';\nimport { Store } from '../store/Store';\nimport { fetchData } from '../store/actions';\nimport TableRow from '../components/TableRow';\n\n\nconst Table = () => {\n  const { state, dispatch } = useContext(Store);\n  const { currentPage, search } = state;\n\n  useEffect(() => {\n    fetchData(dispatch, search, currentPage);\n  }, [search, currentPage, dispatch]);\n\n  const tableRows = state.beers.map(({\n    id,\n    name,\n    abv,\n    volume,\n    ingredients,\n  }) => {\n    const ings = (\n      <ul>\n        {\n          Object.keys(ingredients)\n            .map((group) => {\n              if (group === 'yeast') {\n                return (\n                  <li\n                    key={group + Math.random()}\n                  >\n                    {`yeast: ${ingredients[group]}`}\n                  </li>\n                );\n              }\n\n              return (\n                <li key={group + Math.random()}>\n                  {group}\n                  <ul>\n                    {\n                      ingredients[group].filter((el, i) => i < 3)\n                        .map((el) => <li key={el.name + Math.random()}>{el.name}</li>)\n                    }\n                  </ul>\n                </li>\n              );\n            })\n        }\n      </ul>\n    );\n    return (\n      <TableRow\n        key={id}\n        name={name}\n        abv={abv}\n        volume={volume.value}\n        ingredients={ings}\n      />\n    );\n  });\n\n  const table = (\n    <table>\n      {/* eslint-disable-next-line */}\n      <caption>Search: {state.search || 'All'}</caption>\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>ABV (%)</th>\n          <th>Volume (litres)</th>\n          <th>Ingredients</th>\n        </tr>\n      </thead>\n      <tbody>\n        {tableRows}\n      </tbody>\n    </table>\n  );\n\n  return table;\n};\n\nexport default Table;\n","import React, { useContext } from 'react';\n\nimport { Store } from '../store/Store';\nimport { nextPage, prevPage } from '../store/actions';\n\n\nconst Pagination = () => {\n  const { state, dispatch } = useContext(Store);\n  const goNextPage = () => {\n    nextPage(dispatch);\n  };\n\n  const goPrevPage = () => {\n    if (state.currentPage === 1) {\n      return;\n    }\n    prevPage(dispatch);\n  };\n\n  return (\n    <div id=\"pagination\">\n      <div id=\"prev\">\n        <button type=\"button\" onClick={goPrevPage}>PREV</button>\n      </div>\n      <div>\n        {/* eslint-disable-next-line */}\n        <p>page {state.currentPage}</p>\n      </div>\n      <div id=\"next\">\n        <button type=\"button\" onClick={goNextPage}>NEXT</button>\n      </div>\n    </div>\n  );\n};\n\nPagination.propTypes = {\n\n};\n\nexport default Pagination;\n","import React, { useState, useContext } from 'react';\n\nimport { Store } from '../store/Store';\nimport { fetchData } from '../store/actions';\n\n\nconst UserInput = () => {\n  const { dispatch } = useContext(Store);\n  const [input, setInput] = useState('');\n  const onChangeHandler = (event) => {\n    setInput(event.target.value);\n  };\n\n  const onSubmitHandler = (event) => {\n    event.preventDefault();\n    fetchData(dispatch, input);\n    setInput('');\n  };\n\n  return (\n    <div id=\"userInput\">\n      <label htmlFor=\"searchString\">\n        {/* eslint-disable-next-line */}\n        Beer name: <input\n          onChange={onChangeHandler}\n          type=\"text\"\n          name=\"searchString\"\n          value={input}\n          placeholder=\"Search shows...\"\n        />\n      </label>\n      <button type=\"button\" onClick={onSubmitHandler}>Search...</button>\n    </div>\n  );\n};\n\nexport default UserInput;\n","import React from 'react';\n\nimport Header from '../components/Header';\nimport '../static/css/App.css';\nimport Table from './Table';\nimport Pagination from './Pagination';\nimport UserInput from './UserInput';\n\n\nconst App = () => (\n  <>\n    <Header />\n    <UserInput />\n    <Table />\n    <Pagination />\n  </>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport { StoreProvider } from './store/Store';\n\n\nReactDOM.render(\n  <StoreProvider>\n    <App />\n  </StoreProvider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}